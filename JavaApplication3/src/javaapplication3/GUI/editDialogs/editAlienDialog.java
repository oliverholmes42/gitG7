 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package javaapplication3.GUI.editDialogs;

import java.awt.event.KeyEvent;
import java.util.HashMap;
import javaapplication3.GUI.panels.AlienPanel;
import javaapplication3.models.Agent;
import javaapplication3.models.Alien;
import javaapplication3.models.Location;
import javaapplication3.models.alienSubclasses.Boglodite;
import javaapplication3.models.alienSubclasses.Squid;
import javaapplication3.models.alienSubclasses.Worm;
import javaapplication3.utils.ObjectManager;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;



/**
 *
 * @author vilso
 */
public class editAlienDialog extends javax.swing.JDialog {
    private Alien activeAlien;
    private AlienPanel Parent;

    /**
     * Creates new form RegisterNewAlienDialogPopupV2
     * @param parent
     * @param modal
     */
    public editAlienDialog(java.awt.Frame parent,AlienPanel home, boolean modal, Alien alien) {
        super(parent, modal);
        this.Parent = home;
        initComponents();
        fillAgentComboBox();
        fillAreaComboBox();
        dynamicLabel.setVisible(false);
        valueSpinner.setVisible(false);
        activeAlien = alien;
        
        fillInfo(alien);
        
    }

    private void fillInfo(Alien alien) {
        nameTextField.setText(alien.getName());
        phoneTextField.setText(alien.getTelephone());
        emailTextField.setText(alien.getEmail());
        agentComboBox.setSelectedItem(alien.getResponsibleAgent().getId()+": "+alien.getResponsibleAgent().getName());
        locationComboBox.setSelectedItem(alien.getLocation().getId()+": "+alien.getLocation().getName());
        speciesComboBox.setSelectedItem(alien.getClass().getSimpleName());
        setSpinner(alien,valueSpinner);
    }
    
    public void setSpinner(Alien alien, JSpinner spinner) {
        if (alien instanceof Worm) {
            Worm worm = (Worm) alien;
            spinner.setValue(worm.getLength()); // Assuming length is a double
        } else if (alien instanceof Boglodite) {
            Boglodite boglodite = (Boglodite) alien;
            int one = boglodite.getBoogieCount();
            spinner.setValue(boglodite.getBoogieCount()); // Assuming bolgodAmounts is an int
        } else if (alien instanceof Squid) {
            Squid squid = (Squid) alien;
            spinner.setValue(squid.getArmCount()); // Assuming arms is an int
        } else {
            // Handle the case where it's a generic Alien or unknown subclass
            spinner.setValue(0); // Default value or some other appropriate action
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        registerAlienLabel = new javax.swing.JLabel();
        inputNameLabel = new javax.swing.JLabel();
        inputPhoneLabel = new javax.swing.JLabel();
        inputEmailLabel = new javax.swing.JLabel();
        inputAgentLabel = new javax.swing.JLabel();
        inputAreaLabel = new javax.swing.JLabel();
        inputSpeciesLabel = new javax.swing.JLabel();
        dynamicLabel = new javax.swing.JLabel();
        valueSpinner = new javax.swing.JSpinner();
        abortButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        agentComboBox = new javax.swing.JComboBox<>();
        speciesComboBox = new javax.swing.JComboBox<>();
        locationComboBox = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(new java.awt.Color(25, 22, 22));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 650));

        registerAlienLabel.setBackground(new java.awt.Color(204, 204, 204));
        registerAlienLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        registerAlienLabel.setForeground(new java.awt.Color(204, 204, 204));
        registerAlienLabel.setText("Redigera Alien");

        inputNameLabel.setBackground(new java.awt.Color(204, 204, 204));
        inputNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputNameLabel.setForeground(new java.awt.Color(204, 204, 204));
        inputNameLabel.setText("Fullständigt namn:");

        inputPhoneLabel.setBackground(new java.awt.Color(204, 204, 204));
        inputPhoneLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputPhoneLabel.setForeground(new java.awt.Color(204, 204, 204));
        inputPhoneLabel.setText("Telefonnummer:");

        inputEmailLabel.setBackground(new java.awt.Color(204, 204, 204));
        inputEmailLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputEmailLabel.setForeground(new java.awt.Color(204, 204, 204));
        inputEmailLabel.setText("E-postadress:");

        inputAgentLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputAgentLabel.setForeground(new java.awt.Color(204, 204, 204));
        inputAgentLabel.setText("Ansvarig agent:");

        inputAreaLabel.setBackground(new java.awt.Color(204, 204, 204));
        inputAreaLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputAreaLabel.setForeground(new java.awt.Color(204, 204, 204));
        inputAreaLabel.setText("Områdeskod:");

        inputSpeciesLabel.setBackground(new java.awt.Color(204, 204, 204));
        inputSpeciesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputSpeciesLabel.setForeground(new java.awt.Color(204, 204, 204));
        inputSpeciesLabel.setText("Art av alien:");

        dynamicLabel.setBackground(new java.awt.Color(204, 204, 204));
        dynamicLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dynamicLabel.setForeground(new java.awt.Color(204, 204, 204));
        dynamicLabel.setText("Dynamic Text");

        valueSpinner.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        abortButton.setBackground(new java.awt.Color(204, 204, 204));
        abortButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        abortButton.setForeground(new java.awt.Color(102, 102, 102));
        abortButton.setText("Avbryt");
        abortButton.setPreferredSize(new java.awt.Dimension(180, 55));
        abortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortButtonActionPerformed(evt);
            }
        });

        registerButton.setBackground(new java.awt.Color(204, 204, 204));
        registerButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        registerButton.setForeground(new java.awt.Color(102, 102, 102));
        registerButton.setText("Spara");
        registerButton.setPreferredSize(new java.awt.Dimension(180, 55));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        agentComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        agentComboBox.setPreferredSize(new java.awt.Dimension(180, 40));

        speciesComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        speciesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boglodite", "Squid", "Worm" }));
        speciesComboBox.setSelectedIndex(-1);
        speciesComboBox.setPreferredSize(new java.awt.Dimension(180, 40));
        speciesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speciesComboBoxActionPerformed(evt);
            }
        });

        locationComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        locationComboBox.setPreferredSize(new java.awt.Dimension(180, 40));

        nameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        phoneTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        phoneTextField.setPreferredSize(new java.awt.Dimension(180, 40));
        phoneTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneTextFieldKeyPressed(evt);
            }
        });

        emailTextField.setEditable(false);
        emailTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        emailTextField.setPreferredSize(new java.awt.Dimension(180, 40));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(registerAlienLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dynamicLabel)
                                .addGap(32, 32, 32)
                                .addComponent(valueSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputNameLabel)
                                    .addComponent(inputEmailLabel)
                                    .addComponent(inputAreaLabel)
                                    .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(abortButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputAgentLabel)
                                    .addComponent(agentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputSpeciesLabel)
                                    .addComponent(speciesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputPhoneLabel)
                                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(registerAlienLabel)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNameLabel)
                    .addComponent(inputPhoneLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputEmailLabel)
                    .addComponent(inputAgentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputAreaLabel)
                    .addComponent(inputSpeciesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speciesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dynamicLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abortButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void speciesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speciesComboBoxActionPerformed
        
        if (evt.getSource() == speciesComboBox) {
            if (speciesComboBox.getSelectedIndex() == 0) {
                dynamicLabel.setText("Antal Boogies:");
                dynamicLabel.setVisible(true);
                valueSpinner.setVisible(true);
                valueSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 20.0d, 1d));
            }
            if (speciesComboBox.getSelectedIndex() == 1) {
                dynamicLabel.setText("Antal Armar:");
                dynamicLabel.setVisible(true);
                valueSpinner.setVisible(true);
                valueSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 20.0d, 1d));
            }
            if (speciesComboBox.getSelectedIndex() == 2) {
                dynamicLabel.setText("Ange längd (m):");
                dynamicLabel.setVisible(true);
                valueSpinner.setVisible(true);
                valueSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 20.0d, 0.1d));
            }
        }
    }//GEN-LAST:event_speciesComboBoxActionPerformed

    private void abortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_abortButtonActionPerformed

    private void fillAgentComboBox() {
        DefaultComboBoxModel<String> dcbm = new DefaultComboBoxModel<>();
        for(Agent item : ObjectManager.Agents.agentList.values()){
            dcbm.addElement(item.getId()+": " + item.getName());
        }
        agentComboBox.setModel(dcbm);
    }
    
    private void fillAreaComboBox() {
        DefaultComboBoxModel<String> dcbm = new DefaultComboBoxModel<>();
        for(Location item : ObjectManager.Locations.locationList.values()){
            dcbm.addElement(item.getId()+": " + item.getName());
        }
        locationComboBox.setModel(dcbm);
    }
    
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        try {
            boolean isNameEmpty = nameTextField.getText().isEmpty();
            boolean isEmailEmpty = emailTextField.getText().isEmpty();
            boolean isPhoneEmpty = phoneTextField.getText().isEmpty();


            if (nameTextField.getText().isEmpty() || emailTextField.getText().isEmpty()
                    || phoneTextField.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Vänligen ange information om Alien du vill registrera med detta formulär");

            } else {
                String newSpecies = (String) speciesComboBox.getSelectedItem();
                String currentSpecies = activeAlien.getClass().getSimpleName();
                
                String name = nameTextField.getText();
                String telefon = phoneTextField.getText();
                Location location = ObjectManager.Locations.locationList.get(Integer.valueOf(locationComboBox.getSelectedItem().toString().split(":")[0].trim()));
                Agent agent = ObjectManager.Agents.agentList.get(Integer.valueOf(agentComboBox.getSelectedItem().toString().split(":")[0].trim()));

                if (newSpecies.equals(currentSpecies)) {
                    if (activeAlien instanceof Worm) {
                        
                        Worm worm = (Worm) activeAlien;
                        Worm temp = new Worm();
                        temp.cloneObject(worm);
                        
                        temp.setAlienName(name);
                        temp.setAlienPhonenumber(telefon);
                        temp.setAlienLocation(location);
                        temp.setAlienResponsibleAgent(agent);
                        
                        temp.setLength((double) valueSpinner.getValue());
                        
                       
                        ObjectManager.updateObject(temp);
                        
                         activeAlien = temp;
                        
                        
                    }
                    else if (activeAlien instanceof Boglodite){
                        Boglodite boglodite = (Boglodite) activeAlien;
                        Boglodite temp = new Boglodite();
                        temp.cloneObject(boglodite);
                        
                        temp.setAlienName(name);
                        temp.setAlienPhonenumber(telefon);
                        temp.setAlienLocation(location);
                        temp.setAlienResponsibleAgent(agent);
                        
                        int intValue = (int) Math.floor((Double) valueSpinner.getValue());
                        temp.setBoogieCount(intValue);
                        
                       
                        ObjectManager.updateObject(temp);
                        
                         activeAlien = temp;
                    }
                    else if (activeAlien instanceof Squid squid){
                        Squid temp = new Squid();
                        temp.cloneObject(squid);
                        
                        temp.setAlienName(name);
                        temp.setAlienPhonenumber(telefon);
                        temp.setAlienLocation(location);
                        temp.setAlienResponsibleAgent(agent);
                        
                        int intValue = (int) Math.floor((Double) valueSpinner.getValue());
                        temp.setArmCount(intValue);

                       
                        ObjectManager.updateObject(temp);
                        
                         activeAlien = temp;
                    }
                    else{
                        Alien temp = new Alien();
                        temp.cloneObject(activeAlien);
                        
                        temp.setAlienName(name);
                        temp.setAlienPhonenumber(telefon);
                        temp.setAlienLocation(location);
                        temp.setAlienResponsibleAgent(agent);
                        
                         ObjectManager.updateObject(temp);
                        
                        activeAlien = temp;
                    }
                } else {
                    
                    Alien temp = new Alien();
                    temp.cloneObject(activeAlien);

                    temp.setAlienName(name);
                    temp.setAlienPhonenumber(telefon);
                    temp.setAlienLocation(location);
                    temp.setAlienResponsibleAgent(agent);

                    ObjectManager.updateObject(temp);

                    activeAlien = temp;
                    HashMap<String,String> objectMap = new HashMap<>();
                    double doubleValue = (double) valueSpinner.getValue();
                    objectMap.put("Value", String.format("%.1f", doubleValue));
                    objectMap.put("Alien_ID", "" + activeAlien.getID());

                    ObjectManager.Aliens.updateSubClass(objectMap, currentSpecies, newSpecies);
                }

                JOptionPane.showMessageDialog(this, "Redigeringen av Alien " + activeAlien.getID() + " lyckades!");
                ObjectManager.Aliens.loadAlienList();
                Parent.reload();
                this.dispose();

            }

        } catch (Exception e) {
            System.out.println(e);
            
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    
    private void phoneTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTextFieldKeyPressed
        String phoneNumber = phoneTextField.getText();
        int length = phoneNumber.length();
        char c = evt.getKeyChar();
        
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'){
            if (length < 10){
                phoneTextField.setEditable(true);
            }else{
                phoneTextField.setEditable(false);
            }
        }else{
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                phoneTextField.setEditable(true);
            }else{
                phoneTextField.setEditable(false);
            }
        }
    }//GEN-LAST:event_phoneTextFieldKeyPressed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abortButton;
    private javax.swing.JComboBox<String> agentComboBox;
    private javax.swing.JLabel dynamicLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel inputAgentLabel;
    private javax.swing.JLabel inputAreaLabel;
    private javax.swing.JLabel inputEmailLabel;
    private javax.swing.JLabel inputNameLabel;
    private javax.swing.JLabel inputPhoneLabel;
    private javax.swing.JLabel inputSpeciesLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> locationComboBox;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JLabel registerAlienLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JComboBox<String> speciesComboBox;
    private javax.swing.JSpinner valueSpinner;
    // End of variables declaration//GEN-END:variables
}
